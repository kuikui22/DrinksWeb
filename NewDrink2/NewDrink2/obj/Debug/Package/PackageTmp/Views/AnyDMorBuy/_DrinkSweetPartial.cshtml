@using NewDrink2.Models
@model NewDrink2.Models.BuyDMDrinkSweet
@{ 
    Layout = null;
    //先計算是否是第一次選甜度
    int TotCount = 0;
    foreach (var item in Model.SweetType)
    {
        if (item.Selected == true)
        {
            TotCount += 1;
        }
    }
}

<style>
    .CheckDivSweet {
        cursor: pointer;
        font-size: 16px;
    }

        .CheckDivSweet:hover {
            background-color: #ffdb52;
            color: #ffffff;
        }
</style>


@using (Html.BeginCollectionItem2("SweetTypeM"))
{
    @Html.ValidationMessageFor(model => model.SweetTypeM, "", new { @class = "text-danger" })
    <ul class="list-group text-center" id="" style="height:250px; overflow: auto; border: solid 1px #dbd7d7; border-radius: 15px; font-family: Microsoft JhengHei;">
        @if (TotCount == 0)
        {
            for (int i = 0; i < Model.SweetType.Count(); i++)
            {
                if (i == 0)
                {
                    <li class="list-group-item CheckDivSweet" style="border: solid 1px #ffffff; border-radius: 20px; background-color: #ffdb52; color: #ffffff;" onclick="CheckSweet(this);">
                        @Html.RadioButtonFor(model => model.SweetTypeM, Model.SweetType[i].Value, new { @checked = true, @style = "display: none;" })
                        @Html.DisplayFor(model => model.SweetType[i].Text)
                    </li>
                }
                else
                {
                    <li class="list-group-item CheckDivSweet" style="border: solid 1px #ffffff; border-radius: 20px;" onclick="CheckSweet(this);">
                        @Html.RadioButtonFor(model => model.SweetTypeM, Model.SweetType[i].Value, new { @style = "display: none;" })
                        @Html.DisplayFor(model => model.SweetType[i].Text)
                    </li>
                }
            }
        }
        else
        {
            for (int i = 0; i < Model.SweetType.Count(); i++)
            {
                if (Model.SweetType[i].Selected == true)
                {
                    <li class="list-group-item CheckDivSweet" style="border: solid 1px #ffffff; border-radius: 20px; background-color: #ffdb52; color: #ffffff;" onclick="CheckSweet(this);">
                        @Html.RadioButtonFor(model => model.SweetTypeM, Model.SweetType[i].Value, new { @checked = true, @style = "display: none;" })
                        @Html.DisplayFor(model => model.SweetType[i].Text)
                    </li>
                }
                else
                {
                    <li class="list-group-item CheckDivSweet" style="border: solid 1px #ffffff; border-radius: 20px;" onclick="CheckSweet(this);">
                        @Html.RadioButtonFor(model => model.SweetTypeM, Model.SweetType[i].Value, new { @style = "display: none;" })
                        @Html.DisplayFor(model => model.SweetType[i].Text)
                    </li>
                }
            }
        }
    </ul>

}

        